# This is a basic workflow to help you get started with Actions

name: CI
env: # Set the secret as an input
  docker_username: gibbus2
  docker_password: ${{ secrets.GITHUB_TOKEN }} #Nees to be set to be made available to the workflow
  GIT_COMMIT: ${{ github.sha }}
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4
      - name: Build application
        run: ci/build-app.sh
      - name: Unittest
        run: ci/unit-test-app.sh
      - name: Upload repo
        uses: actions/upload-artifact@v4
        with: 
          name: code
          path: .
  Linting:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: linting
        uses: super-linter/super-linter/slim@v5
        env:
          DEFAULT_BRANCH: main
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: true
  Docker-image:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: build docker
        run: bash ci/build-docker.sh
      - name: push docker
        run: bash ci/push-docker.sh
  Component-test:
    runs-on: ubuntu-latest
    needs: Docker-image
    permissions:
      packages: read
    steps:
    - name: Download code
      uses: actions/download-artifact@v4
      with:
        name: code
        path: .
    - name: Execute component test
      run: bash ci/component-test.sh
  Performance-test:
    runs-on: ubuntu-latest
    needs: Docker-image
    permissions:
      packages: read
    steps:
    - name: Download code
      uses: actions/download-artifact@v4
      with:
        name: code
        path: .
    - name: Execute performance test
      run: bash ci/performance-test.sh
